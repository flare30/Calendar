{"version":3,"sources":["Day.js","Calendar.js","index.js"],"names":["Day","props","sendData","dayCheck","Date","this","currentDate","currentDay","className","daynumber","React","Component","Calendar","state","message","checksIfCurrentDate","isDate","setState","isCurrentDay","colSpan","rowSpan","CurrentMonth","CurrentYear","splitDaysOfMonth","daycheck","LastRow","DaysOfMonth","day","getMonth","getFullYear","i","month","year","getDate","newDay","setDate","push","console","log","dayCounter","n","getDay","length","splitDateArray","ReactDOM","render","document","getElementById"],"mappings":"0LAgCeA,E,kDA5BX,WAAYC,GAAQ,IAAD,uBACf,cAAMA,IAKVC,SAAW,WACP,EAAKD,MAAME,YALO,IAAIC,KAFP,S,0CAUnB,WACI,OAAIC,KAAKC,cAAgBD,KAAKJ,MAAMM,WAE5B,qBAAKC,UAAU,cAAf,SACI,mBAAGA,UAAU,eAAb,SAA6BH,KAAKJ,MAAMQ,cAM5C,8BACI,mBAAGD,UAAU,aAAb,SAA2BH,KAAKJ,MAAMQ,kB,GAtBxCC,IAAMC,WCClBC,E,kDAKJ,aAAe,IAAD,8BACZ,gBALFC,MAAQ,CACNC,QAAU,IAGE,EAKdC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CAACH,QAAUE,KAJzB,EAAKH,MAAQ,CAAEK,aAAc,GAFjB,E,0CASd,WACE,OACE,wBAAOV,UAAU,KAAjB,UACE,gCACE,oBAAIA,UAAU,SAAd,SACE,qBAAIW,QAAQ,IAAIC,QAAQ,IAAxB,UAA6BC,EAA7B,IAA4CC,SAGhD,kCACE,qBAAId,UAAU,OAAd,UACE,oBAAIA,UAAU,YAAd,oBACA,oBAAIA,UAAU,YAAd,oBACA,oBAAIA,UAAU,YAAd,qBACA,oBAAIA,UAAU,YAAd,uBACA,oBAAIA,UAAU,YAAd,sBACA,oBAAIA,UAAU,YAAd,oBACA,oBAAIA,UAAU,YAAd,yBAEF,qBAAIA,UAAU,QAAd,UACE,+BAAI,cAAC,EAAD,CAAKC,UAAWc,EAAiB,GAAG,GAAIC,SAAUnB,KAAKU,sBAAuBV,KAAKQ,MAAMC,WAC7F,6BAAI,cAAC,EAAD,CAAKL,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,UAE1C,qBAAIf,UAAU,QAAd,UACE,6BAAI,cAAC,EAAD,CAAKC,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,UAE1C,qBAAIf,UAAU,QAAd,UACE,6BAAI,cAAC,EAAD,CAAKC,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,UAE1C,qBAAIf,UAAU,QAAd,UACE,6BAAI,cAAC,EAAD,CAAKC,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,UAE1C,qBAAIf,UAAU,QAAd,UACE,6BAAI,cAAC,EAAD,CAAKC,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,UAEb,OAA3BA,EAAiB,GAAG,GAAc,cAAC,EAAD,IAAa,e,GA7EpCb,IAAMC,WAoFvBc,EAAU,kBACd,+BACE,6BAAI,cAAC,EAAD,CAAKhB,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,OACxC,6BAAI,cAAC,EAAD,CAAKd,UAAWc,EAAiB,GAAG,WAQ5C,IAAIG,EAAc,GAEdH,EAAmB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,IAInCI,EAAM,IAAIvB,KACViB,EAHS,CAAC,UAAW,UAAW,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAGjGM,EAAIC,YAC1BN,EAAcK,EAAIE,eAEtB,WACE,IAAK,IAAIC,EAAI,EAAGA,IAfJC,EAecJ,EAAIC,WAAW,EAfvBI,EAe0BL,EAAIE,cAAc,EAdvD,IAAIzB,KAAK4B,EAAMD,EAAO,GAAGE,WAckCH,IAAK,CACrE,IAAII,EAAS,IAAI9B,KAAKuB,GACtBO,EAAOC,QAAQL,GACfJ,EAAYU,KAAKF,GAlBrB,IAAcH,EAAMC,EAoBlBK,QAAQC,IAAI,oBAkDdL,GA/CA,WAEE,IADA,IAAIM,EAAa,EACRC,EAAI,EAAGA,EAAI,EAAGA,IACjBA,EAAId,EAAY,GAAGe,SACnBlB,EAAiB,GAAGa,KAAK,OAEzBb,EAAiB,GAAGa,KAAKV,EAAYa,GAAYN,WACjDM,KAIN,IAAI,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACpBjB,EAAiB,GAAGa,KAAKV,EAAYa,GAAYN,WACjDM,IAGF,IAAI,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACpBjB,EAAiB,GAAGa,KAAKV,EAAYa,GAAYN,WACjDM,IAGF,IAAI,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACpBjB,EAAiB,GAAGa,KAAKV,EAAYa,GAAYN,WACjDM,IAGF,IAAI,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAChBD,EAAab,EAAYgB,QAC3BnB,EAAiB,GAAGa,KAAKV,EAAYa,GAAYN,WACjDM,KAEAhB,EAAiB,GAAGa,KAAK,MAI7B,IAAI,IAAII,EAAI,EAAGA,EAAI,EAAGA,IAChBD,EAAab,EAAYgB,QAC3BnB,EAAiB,GAAGa,KAAKV,EAAYa,GAAYN,WACjDM,KAEAhB,EAAiB,GAAGa,KAAK,MAI7BC,QAAQC,IAAI,0BAKdK,GAEe/B,QC1KfgC,IAASC,OAAO,cAAC,EAAD,IAAaC,SAASC,eAAe,U","file":"static/js/main.9f3e24cb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nclass Day extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        var currentDate = new Date()\r\n        var isCurrentDate = false;\r\n    }\r\n\r\n    sendData = () => {\r\n        this.props.dayCheck()\r\n    }\r\n\r\n    render() {\r\n        if (this.currentDate === this.props.currentDay) {\r\n            return (\r\n                <div className=\"Current_Day\">\r\n                    <p className=\"Day_Selected\">{this.props.daynumber}</p>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <p className=\"Day_Number\">{this.props.daynumber}</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Day;","import React from 'react';\r\nimport './style.css';\r\nimport Day from './Day.js';\r\n\r\nclass Calendar extends React.Component {\r\n  state = {\r\n    message : \"\"\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = { isCurrentDay: 0 };\r\n  }\r\n\r\n  checksIfCurrentDate = (isDate) => {\r\n    this.setState({message : isDate})\r\n  }\r\n\r\n  render () {\r\n    return(\r\n      <table className=\"tg\">\r\n        <thead>\r\n          <tr className=\"twoRow\">\r\n            <th colSpan=\"7\" rowSpan=\"2\">{CurrentMonth} {CurrentYear}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr className=\"blue\">\r\n            <td className=\"dayofweek\">Sunday</td>\r\n            <td className=\"dayofweek\">Monday</td>\r\n            <td className=\"dayofweek\">Tuesday</td>\r\n            <td className=\"dayofweek\">Wednesday</td>\r\n            <td className=\"dayofweek\">Thursday</td>\r\n            <td className=\"dayofweek\">Friday</td>\r\n            <td className=\"dayofweek\">Saturday</td>\r\n          </tr>\r\n          <tr className=\"black\">\r\n            <td><Day daynumber={splitDaysOfMonth[0][0]} daycheck={this.checksIfCurrentDate}/>{this.state.message}</td>\r\n            <td><Day daynumber={splitDaysOfMonth[0][1]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[0][2]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[0][3]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[0][4]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[0][5]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[0][6]}/></td>\r\n          </tr>\r\n          <tr className=\"black\">\r\n            <td><Day daynumber={splitDaysOfMonth[1][0]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[1][1]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[1][2]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[1][3]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[1][4]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[1][5]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[1][6]}/></td>\r\n          </tr>\r\n          <tr className=\"black\">              \r\n            <td><Day daynumber={splitDaysOfMonth[2][0]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[2][1]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[2][2]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[2][3]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[2][4]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[2][5]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[2][6]}/></td>\r\n          </tr>\r\n          <tr className=\"black\">\r\n            <td><Day daynumber={splitDaysOfMonth[3][0]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[3][1]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[3][2]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[3][3]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[3][4]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[3][5]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[3][6]}/></td>\r\n          </tr>\r\n          <tr className=\"black\">\r\n            <td><Day daynumber={splitDaysOfMonth[4][0]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[4][1]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[4][2]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[4][3]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[4][4]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[4][5]}/></td>\r\n            <td><Day daynumber={splitDaysOfMonth[4][6]}/></td>\r\n          </tr>\r\n          { splitDaysOfMonth[5][0] !== null ? <LastRow/> : null }\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\nconst LastRow = () => (\r\n  <tr>\r\n    <td><Day daynumber={splitDaysOfMonth[5][0]}/></td>\r\n    <td><Day daynumber={splitDaysOfMonth[5][1]}/></td>\r\n    <td><Day daynumber={splitDaysOfMonth[5][2]}/></td>\r\n    <td><Day daynumber={splitDaysOfMonth[5][3]}/></td>\r\n    <td><Day daynumber={splitDaysOfMonth[5][4]}/></td>\r\n    <td><Day daynumber={splitDaysOfMonth[5][5]}/></td>\r\n    <td><Day daynumber={splitDaysOfMonth[5][6]}/></td>\r\n  </tr>\r\n)\r\n\r\nfunction days(month,year) {\r\n  return new Date(year, month, 0).getDate();\r\n}\r\n\r\nlet DaysOfMonth = []\r\n\r\nlet splitDaysOfMonth = [[],[],[],[],[],[]]\r\n\r\nlet months = [\"January\", \"Febuary\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n\r\nlet day = new Date();\r\nlet CurrentMonth = months[day.getMonth()]\r\nlet CurrentYear = day.getFullYear()\r\n\r\nfunction getDate(){\r\n  for (let i = 1; i <= days(day.getMonth()+1, day.getFullYear()+1); i++) {\r\n    let newDay = new Date(day)\r\n    newDay.setDate(i)\r\n    DaysOfMonth.push(newDay)\r\n  }\r\n  console.log('generating dates')\r\n}\r\n\r\nfunction splitDateArray(){\r\n  let dayCounter = 0;\r\n  for (let n = 0; n < 7; n++) {\r\n    if (n < DaysOfMonth[0].getDay()) {\r\n        splitDaysOfMonth[0].push(null)\r\n      } else {\r\n        splitDaysOfMonth[0].push(DaysOfMonth[dayCounter].getDate())\r\n        dayCounter++;\r\n      }\r\n  }\r\n\r\n  for(let n = 0; n < 7; n++) {\r\n    splitDaysOfMonth[1].push(DaysOfMonth[dayCounter].getDate())\r\n    dayCounter++;\r\n  }\r\n\r\n  for(let n = 0; n < 7; n++) {\r\n    splitDaysOfMonth[2].push(DaysOfMonth[dayCounter].getDate())\r\n    dayCounter++;\r\n  }\r\n\r\n  for(let n = 0; n < 7; n++) {\r\n    splitDaysOfMonth[3].push(DaysOfMonth[dayCounter].getDate())\r\n    dayCounter++;\r\n  }\r\n\r\n  for(let n = 0; n < 7; n++) {\r\n    if (dayCounter < DaysOfMonth.length){\r\n      splitDaysOfMonth[4].push(DaysOfMonth[dayCounter].getDate())\r\n      dayCounter++;\r\n    } else {\r\n      splitDaysOfMonth[4].push(null)\r\n    }\r\n  }\r\n\r\n  for(let n = 0; n < 7; n++) {\r\n    if (dayCounter < DaysOfMonth.length){\r\n      splitDaysOfMonth[5].push(DaysOfMonth[dayCounter].getDate())\r\n      dayCounter++;\r\n    } else {\r\n      splitDaysOfMonth[5].push(null)\r\n    }\r\n  }\r\n\r\n  console.log('putting dates in array')\r\n}\r\n\r\ngetDate()\r\n\r\nsplitDateArray()\r\n\r\nexport default Calendar;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Calendar from './Calendar.js';\r\n\r\nReactDOM.render(<Calendar/>, document.getElementById('root'));"],"sourceRoot":""}